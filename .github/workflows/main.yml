on:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: get_version
        uses: battila7/get-version-action@v2
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - run: |
          set -euo pipefail
          find . -type f -print0 | xargs -0 sed -i'' -e 's,@project-version@,${{ steps.get_version.outputs.version }},g'
          sed -n '/^externals:$/,/^[^ ]/p' .pkgmeta | sed '1d;$d' | while read pathcolon repo; do svn checkout "$(echo $repo | sed -e 's,svn://svn.wowace.com/\([^/]*/[^/]*\)/mainline/,https://repos.wowace.com/\1/,')/" "$(echo ${pathcolon} | sed -e 's,:$,,')" || exit 1; done
          git log --pretty=format:'- %s' $(git describe --abbrev=0 --tags HEAD^)..HEAD > Changelog-${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}.txt
          rsync --exclude .git --exclude .svn --exclude .github --exclude .pkgmeta -a . ${{ github.event.repository.name }}
          zip -r ${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}.zip ${{ github.event.repository.name }}
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: Changelog-${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}.txt
      - id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: '${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}.zip'
          asset_name: '${{ github.event.repository.name }}-${{ steps.get_version.outputs.version }}.zip'
          asset_content_type: application/zip
